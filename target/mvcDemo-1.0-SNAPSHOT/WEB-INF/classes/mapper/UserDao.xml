<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 设置为IUserDao接口方法提供sql语句配置 -->
<mapper namespace="com.zhang.dao.IUserDao">

    <select id="selectUser" resultType="User" parameterType="long">
        SELECT * FROM z_user WHERE id = #{id}
    </select>
    <select id ="findAll" resultType="User">
        select * from  z_user
    </select>

    <select id="findUserName" resultType="User" parameterType="String">
    select top 1 * from z_user where username=#{username}
    </select>

    <select id="findCount" parameterType="String" resultType="Integer">
        select count (*) from z_user as  u
        <if test=" fuzzy != null and fuzzy != ''">
            where  (u.username like concat('%',#{fuzzy},'%')
            or
            u.name like concat ('%',#{fuzzy},'%')
            or
            u.sex like concat('%',#{fuzzy},'%'))
        </if>

    </select>

    <select id="fuzzyQuery" parameterType="java.util.Map" resultType="User">
        select top ${pageSize} * from z_user
        as u
         where
          u.id
          not in
         (select top ((${pageNum}-1) * ${pageSize}) id from z_user ORDER BY id ASC)
        <if test=" fuzzy != null and fuzzy != ''">
            and (u.username like concat('%',#{fuzzy},'%')
            or
            u.name like concat ('%',#{fuzzy},'%')
            or
            u.sex like concat('%',#{fuzzy},'%'))
        </if>

        ORDER BY id

    </select>


    <select id="exitContactBy" resultType="User">
        select * from z_user u
        where u.username=#{username}
    </select>



    <select id="checkUserName" resultType="User">
        select * from z_user u
        where u.username=#{username}
    </select>

    <select id="getById" parameterType="long" resultType="User">
     select * from z_user u where u.id=#{id}
    </select>
    <insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        insert into z_user
        (
        username,
        password,
        name,
        sex,
        birthday,
        hobbies,
        insertTime,
        updateTime,
        valid
        )
        values
        (
        #{username},
        #{password},
        #{name},
        #{sex},
        #{birthday},
        #{hobbies},
        #{insertTime},
        #{updateTime},
        #{valid}
        )
    </insert>
    <update id="update" parameterType="User">
        update z_user set
        username=#{username},
        password=#{password},
        name=#{name},
        sex=#{sex},
        birthday=#{birthday},
        hobbies=#{hobbies},
        updateTime=#{updateTime},
        valid=#{valid}
        where id=#{id}
    </update>
    <delete id ="delete" parameterType="User">
        update z_user set valid=#{valid} where id=#{id}
    </delete>

</mapper>